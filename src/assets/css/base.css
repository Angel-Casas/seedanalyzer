/**** FONT *****/

/* quattrocento-regular - latin */
@font-face {
  font-family: 'Quattrocento';
  font-style: normal;
  font-weight: 400;
  src: url('../fonts/quattrocento-v11-latin-regular.eot'); /* IE9 Compat Modes */
  src: url('../fonts/quattrocento-v11-latin-regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('../fonts/quattrocento-v11-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */
       url('../fonts/quattrocento-v11-latin-regular.woff') format('woff'), /* Modern Browsers */
       url('../fonts/quattrocento-v11-latin-regular.ttf') format('truetype'), /* Safari, Android, iOS */
       url('../fonts/quattrocento-v11-latin-regular.svg#Quattrocento') format('svg'); /* Legacy iOS */
}

/* playfair-display-regular - latin */
@font-face {
  font-family: 'Playfair Display';
  font-style: normal;
  font-weight: 400;
  src: url('../fonts/playfair-display-v20-latin-regular.eot'); /* IE9 Compat Modes */
  src: url('../fonts/playfair-display-v20-latin-regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('../fonts/playfair-display-v20-latin-regular.woff2') format('woff2'), /* Super Modern Browsers */
       url('../fonts/playfair-display-v20-latin-regular.woff') format('woff'), /* Modern Browsers */
       url('../fonts/playfair-display-v20-latin-regular.ttf') format('truetype'), /* Safari, Android, iOS */
       url('../fonts/playfair-display-v20-latin-regular.svg#PlayfairDisplay') format('svg'); /* Legacy iOS */
}

/* Variables */
:root {
  --primary: rgb(2, 80, 198);
  --secondary: rgb(24, 132, 232);
  --secondaryTransparencyLight: rgba(24, 132, 232, 0.2);
  --secondaryTransparencyDark: rgba(169, 255, 212, 0.2);
  --secondaryTransparency: var(--secondaryTransparencyLight);
  --alpha: 0.2;
  --bg-light: rgb(255, 255, 255);
  --bg-dark: rgb(34, 34, 34);
  --text-light: rgb(34, 34, 34);
  --text-dark: rgb(255, 255, 255);
  --main-gold: rgb(255, 209, 76);
  --secondary-gold: rgb(255, 209, 76);
  --main-green: rgb(89, 255, 172);
  --secondary-green: rgb(169, 255, 212);
  --main-aquamarine: rgb(0, 164, 140);
  --passage: rgb(19, 174, 170);
  --light-green: rgb(0, 203, 152);
  --dark-green: rgb(0, 98, 10);
  --main-blue: rgb(2, 80, 198);
  --secondary-blue: rgb(24, 132, 232);
  --main-red: rgb(254, 82, 82);
  --main-grey: rgb(179, 179, 179);
  --secondary-grey: rgb(83, 83, 83);
  --main-black: rgb(34, 34, 34);
  --secondary-black: rgb(59, 62, 64);
  --warning: rgb(255, 140, 46);
  --danger: rgb(254, 82, 82);
  --info: rgb(24, 132, 232);
  --grey: var(--main-grey);
  --green: var(--dark-green);
  --background: var(--bg-light);
  --text: var(--text-light);
}

/* Common */
.white {
  color: var(--bg-light);
}
.primary {
  color: var(--primary);
}
.secondary {
  color: var(--secondary);
}
.mainGreen {
  color: var(--main-green);
}
.mainRed {
  color: var(--main-red);
}
.mainBlue {
  color: var(--main-blue);
}
.mainGrey {
  color: var(--main-grey);
}
.contrastGreen {
  color: var(--green);
}
.danger {
  color: var(--danger);
}
.background {
  color: var(--background);
}
.backgroundGold {
  background-color: var(--main-gold);
}
.bold {
  font-weight: bold;
}
.noBold {
  font-weight: normal;
}
.big {
  font-size: 2.5rem;
}
.bigMarginTop {
  margin-top: 50px;
}
.large {
  font-size: 2em;
}
.liveSignal::before {
  display: inline-block;
  content: "";
  width: 10px;
  height: 10px;
  border: 5px solid var(--main-green);
  border-radius: 10px;
  margin: 0 5px;
  animation: pulse 2s ease-in-out infinite;
}
@keyframes pulse {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}
.offlineSignal::before {
  display: inline-block;
  content: "";
  width: 10px;
  height: 10px;
  border: 5px solid var(--main-red);
  border-radius: 10px;
  margin: 0 5px;
}
.reconnectingSignal::before {
  display: inline-block;
  content: "";
  width: 10px;
  height: 10px;
  border: 5px solid var(--main-gold);
  border-radius: 10px;
  margin: 0 5px;
  animation: pulse 2s ease-in-out infinite;
}
.small {
  font-size: 1.4rem;
}
.underline {
  text-decoration: underline;
  text-decoration-color: var(--main-red);
}
html, body {
  background: var(--background);
  color: var(--text);
  transition: all 200ms ease-in;
}
h1 {
  font-size: 26px;
}
h2 {
  font-size: 24px;
}
h3 {
  font-size: 22px;
}
h4 {
  font-size: 20px;
}
#App {
  min-height: 100%;
  min-width: fit-content;
  text-align: center;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-flow: column nowrap;
          flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
}
button {
  font-weight: bold;
  border: 2px solid var(--primary);
  padding: 15px 20px;
  margin: 10px;
  background-color: var(--background);
  color: var(--primary);
  cursor: pointer;
}
button:hover {
  background-color: var(--primary);
  color: var(--background);
}
button:hover .icon {
  fill: var(--background);
}
.big {
  font-size: 3.4rem;
}
.icon {
  width: 1em;
  height: 1em;
  vertical-align: -.125em;
  fill: var(--primary);
}
.xl {
  font-size: 1.5em;
}
.xxl {
  font-size: 2em;
}
.watermark {
  color: var(--background);
}
.select {
  position: relative;
  display: grid;
  grid-template-areas: "select";
  align-items: center;
  width: 100%;
  border: 1px solid var(--primary);
  border-radius: 0.25em;
  padding: 0.25em 0.5em;
  margin: 0 0.25em;
  cursor: pointer;
  line-height: 1.1;
  background-color: var(--background);
}
select,
option {
  color: var(--text);
}
select,
.select::after {
  grid-area: select;
}
.select::after {
  content: "";
  width: 0.8em;
  height: 0.5em;
  background-color: var(--primary);
  clip-path: polygon(100% 0%, 0 0%, 50% 100%);
  justify-self: end;
}
select:focus + .focus {
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  border: 2px solid var(--select-focus);
  border-radius: inherit;
}
option {
  background-color: var(--background);
}
input[type="color"] {
  padding: 1em;
}
input[type="checkbox"] {
  position: relative;
  height: 20px;
  accent-color: var(--primary);
}
input[type="checkbox"] ~ .checkboxText {
  color: var(--text);
  opacity: 0.7;
}
input[type="checkbox"]:checked ~ .checkboxText,
.inputWrap:hover input[type="checkbox"] ~ .checkboxText {
  color: var(--primary);
  opacity: 1;
}
input:not(input[type="radio"]):not(input[type="checkbox"]):hover {
  box-shadow: 6px 4px var(--primary);
}
input {
  position: relative;
  border-width: 0;
  border-bottom: 3px solid var(--primary);
  background-color: transparent;
  color: var(--text);
  margin: 5px 10px;
  transition: box-shadow 0.2s ease-in-out;
}
input:focus {
  outline: 0;
  box-shadow: 0;
}
.inputWrap::before {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transition: opacity 0.2s ease-in-out;
  z-index: -1;
}
.inputWrap:hover::before {
  background-color: var(--main-red);
  opacity: var(--alpha);
}
.inputWrap {
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  width: 33%;
  padding: 5px;
}
input[type="radio"] {
  width: 2em;
  height: 2rem;
  accent-color: var(--secondary);
}
input[type="color"] {
  height: 4em;
}
input,
label {
  display: block;
  line-height: 1;
  font: inherit;
  font-weight: bold;
  padding: 0 0.5em;
  width: 100%;
}
label {
  display: flex;
  flex-flow: row nowrap;
  justify-content: right;
  align-items: center;
  text-align: right;
}
.checkboxWrapper {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}
a {
  text-decoration: none;
}
.bigInfo {
  font-size: 1.6em;
}
.tooltip {
  position: relative;
  display: inline-block;
  margin: 5px;
}
.tooltip .tooltipText {
  visibility: hidden;
  opacity: 0;
  width: 200px;
  background-color: var(--secondary);
  color: var(--background);
  font-weight: bold;
  text-align: center;
  padding: 5px;
  border-radius: 6px;
  position: absolute;
  bottom: 100%;
  transform: translateX(-54%);
  z-index: 1;
  transition: opacity .3s ease-in-out;
}
.tooltip:hover .tooltipText {
  visibility: visible;
  opacity: 1;
}
.tooltip .tooltipText::after {
  content: " ";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: var(--secondary) transparent transparent transparent;
}
.progressBar {
  position: absolute;
  top: 0;
  left: 0;
  border: 2px solid red;
}
.notificationWrapper {
  position: fixed;
  bottom: 25px;
  left: 25px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  width: 350px;
  height: 150px;
  background-color: var(--primary);
  color: var(--background);
  z-index: 1000;
}
.notificationWrapper > svg {
  align-self: center;
  margin-left: 10px;
  fill: var(--background);
}
.notificationWrapper .notificationTextWrapper {
  align-self: center;
}
.notificationWrapper .notificationTextWrapper .notificationTitle,
.notificationWrapper .notificationTextWrapper .notificationMessage {
  text-align: center;
}
.notificationWrapper .notificationTitle {
  display: block;
  font-weight: bold;
  width: 100%;
}
.notificationMessage {
  padding: 0 0.5em;
}
.overflowX {
  overflow-x: scroll;
}

/* Install Prompt */
.installerWrapper {
  width: 100%;
  max-width: 500px;
  background-color: var(--passage);
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  padding: 20px 20px;
}
.installerWrapper span {
  color: white;
  font-size: 1.5em;
}
.installerWrapper .buttonPromptWrapper {
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-end;
  margin-top: 10px;
}
.installerWrapper .buttonPrompt {
  position: relative;
  padding: 5px;
  font-size: 1.3em;
  font-weight: bold;
  cursor: pointer;
  border-bottom: 2px solid transparent;
}
.installerWrapper .buttonPrompt:after {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  width: 0%;
  content: '.';
  color: transparent;
  background: var(--main-gold);
  height: 2px;
  transition: all 0.5s ease-in-out;
}
.installerWrapper .buttonPrompt:hover:after {
  width: 100%;
}

/* Service Worker */
.pwaToast {
  position: fixed;
  right: 0;
  bottom: 0;
  margin: 16px;
  padding: 12px;
  z-index: 1;
  box-shadow: 3px 4px 5px 0 #8885;
  background-color: var(--primary);
  color: var(--background);
}
.pwaToast .message {
  margin-bottom: 8px;
}

/* Header */
nav a {
  position: relative;
  font-size: 1.5em;
  margin: 0 5px;
  border-bottom: 1px solid transparent;
}
nav a:after {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  width: 0%;
  content: '.';
  color: transparent;
  background: var(--primary);
  height: 2px;
  transition: all 0.5s;
}
nav a:not(.router-link-exact-active):hover:after {
  width: 100%;
}
nav a.router-link-exact-active::after {
  width: 100%;
}
.themeToggle {
  position: fixed;
  top: 0;
  right: 0;
  padding: 5px 10px;
  border: 2px solid var(--primary);
  background-color: var(--background);
  color: var(--primary);
  transition: all 1s;
  z-index: 1000;
}
.themeToggle:hover {
  box-shadow: 0 0 10px 0 var(--primary) inset, 0 0 15px 1px var(--primary);
}
.themeToggle:hover svg {
  fill: var(--background);
}

/* Loading spinner */
.spinnerWrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backdrop-filter: blur(2px);
  /* background-color: rgba(0, 0, 0, 0.3); */
}
.spinnerContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}
.spinnerContainer .loading {
  margin-top: 20px;
  font-weight: bold;
  color: var(--background);
}
.sk-cube-grid {
  width: 45px;
  height: 45px;
}
.sk-cube-grid .sk-cube {
  width: 33%;
  height: 33%;
  background-color: var(--background);
  float: left;
  -webkit-animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
          animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out; 
}
.sk-cube-grid .sk-cube1 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.sk-cube-grid .sk-cube2 {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s; }
.sk-cube-grid .sk-cube3 {
  -webkit-animation-delay: 0.4s;
          animation-delay: 0.4s; }
.sk-cube-grid .sk-cube4 {
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.sk-cube-grid .sk-cube5 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.sk-cube-grid .sk-cube6 {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s; }
.sk-cube-grid .sk-cube7 {
  -webkit-animation-delay: 0s;
          animation-delay: 0s; }
.sk-cube-grid .sk-cube8 {
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.sk-cube-grid .sk-cube9 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
@-webkit-keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1); 
  }
}
@keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
  } 
}

/* Home View */
.passage {
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  width: 100%;
  background-color: var(--passage);
  padding: 25px 25px;
  margin-top: 35px;
  -webkit-transition: background-color 1000ms linear;
  -ms-transition: background-color 1000ms linear;
  transition: background-color 1000ms linear;
}
.passage .imgWrapper {
  position: relative;
  min-width: 500px;
  width: 100%;
  max-width: 800px;
}
.passage:hover {
  background-color: var(--main-gold);
}
.passage .superimpose {
  position: absolute;
  top: 0;
  left: 10%;
  width: 80%;
}
.passage .leafs {
  animation: leafs 20s 2s infinite;
  z-index: 100;
}
.passage .leafs2 {
  animation: leafs2 30s infinite;
  z-index: 100;
}
.passage .tree {
  width: 75%;
}
.passage > span:first-child {
  align-self: flex-start;
}
.passage > span:last-child {
  align-self: flex-end;
}
.passage > span {
  font-size: 1.7em;
  font-family: 'Playfair Display';
  color: white;
  width: 50%;
  margin: 20px 0;
  text-align: right;
}
.passage > span,
.passage .imgWrapper div {
  opacity: 0;
}
.passage .fadeIn {
  animation: fadeIn 3s forwards;
}
.passage .fadeInSlideIn {
  animation: fadeIn 2s forwards, slideTopDown 4s forwards;
}
.passage .supportCoins {
  padding: 0 20px;
}
.passage .bop {
  animation: bop 23s infinite;
  z-index: 100;
}
.passage .bop2 {
  animation: bop 33s infinite;
  z-index: 100;
}
.passage .fireflyFade {
  animation: fireflyFade 7s infinite;
}
.passage .fireflyFade2 {
  animation: fireflyFade 8s 1s infinite;
}
.passage .cloudFloat,
.passage .cloudFloat2 {
  width: 100%;
}
.passage .cloudFloat {
  animation: cloudFloat 15s infinite;
}
.passage .cloudFloat2 {
  animation: cloudFloat2 15s 3s infinite;
}
@keyframes cloudFloat {
  0%, 100% {
    transform: translateX(0) translateY(0);
  } 50% {
    transform: translateX(15px) translateY(5px);
  } 
}
@keyframes cloudFloat2 {
  0%, 100% {
    transform: translateX(0) translateY(0);
  } 50% {
    transform: translateX(13px) translateY(20px);
  } 
}
@keyframes bop {
  0%, 100% {
    -webkit-transform: translateY(0);
    -webkit-transform: translateY(0);
    transform: translateY(0);
  } 50% {
    -webkit-transform: translateY(30px);
            transform: translateY(30px);
  } 
}
@keyframes bop2 {
  0%, 100% {
    -webkit-transform: translateY(0);
    -webkit-transform: translateY(0);
    transform: translateY(0);
  } 50% {
    -webkit-transform: translateY(25px);
            transform: translateY(25px);
  } 
}
@keyframes fireflyFade {
  20%, 40%, 85% {
    opacity: 0.3;
  } 0%, 60%, 100% {
    opacity: 1;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
  } to {
    opacity: 1;
  } 
}
@keyframes slideTopDown {
  from {
    transform: translateY(-20px);
  } to {
    transform: translateY(0);
  } 
}
@keyframes slideLeft {
  from {
    transform: translateX(-100px);
  } to {
    transform: translatex(0);
  }
}
@keyframes leafs {
  0%, 100% {
    -webkit-transform: scale3D(1, 1, 1) rotate(0deg);
    transform: scale3D(1, 1, 1) rotate(0deg);
  } 50% {
    -webkit-transform: scale3D(0.8, 0.8, 1) rotate(15deg);
            transform: scale3D(0.8, 0.8, 1) rotate(15deg);
  } 
}
@keyframes leafs2 {
  0%, 100% {
    -webkit-transform: scale3D(0.8, 0.8, 1) rotate(-15deg);
            transform: scale3D(0.8, 0.8, 1) rotate(-15deg);
  } 50% {
    -webkit-transform: scale3D(1.1, 1.1, 1) rotate(0deg);
            transform: scale3D(1.1, 1.1, 1) rotate(0deg);
  } 
}
/* Chart */
#Chart {
  padding: 50px;
}
.mainChartWrapper {
  position: relative;
}
.chartWrapper {
  width: 100%;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: center;
}
#Plot {
  position: relative;
  min-width: 300px;
  min-height: 400px;
  margin: 10px;
  background-color: var(--primary);
}
.displayChartInput {
  position: relative;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: baseline;
  width: 200px;
  margin: 0 auto;
}
#displayChart {
  margin: 0;
}
.chartInputs, .chartButtons {
  margin: 10px;
  width: 100%;
}
.tabButtonsContainer {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
}
.tabButton {
  border: none;
  background-color: var(--primary);
  color: var(--background);
  margin: 10px 10px -1px 10px;
  padding: 20px;
  border-radius: 3px;
  font-weight: bold;
  transition: background-color 0.2s ease-in-out;
}
.tabButton .icon {
  fill: var(--background);
}
.tabButton:hover {
  background-color: var(--secondary);
}
.tabButton.active {
  background-color: var(--background);
  color: var(--primary);
  border: 1px solid var(--primary);
  border-bottom: 1px solid var(--background);
}
.tabButton.active .icon {
  fill: var(--primary);
}
.tab {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  border-top: 1px solid var(--primary);
  padding: 25px;
}
.configurationTab, .setupTab, .targetTab, .tabItem {
  width: 100%;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-between;
  align-items: center;
}
.strategyTab {
  display: flex;
  flex-flow:row wrap;
  justify-content: center;
  align-items: center;
}
.tabItem h4 {
  margin-bottom: 15px;
}
.resultsWrapper {
  margin: 25px 0;
  width: 100%;
}
.resultsWrapper ul {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  align-items: center;
}
.resultsItem {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  margin: 5px 10px;
  color: var(--grey);
  border-bottom: 1px solid var(--secondary);
}
.resultsItem span:not(.contrastGreen, .mainRed) {
  color: var(--text);
}
.vue-apexcharts {
  width: 50%;
}

/* Strategy */
.strategyTab {
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}
.conditionWrapper {
  width: 100%;
  max-width: 700px;
  min-width: 200px;
  text-align: left;
  margin: 10px 0;
}
.conditionItemWrapper {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  width: 100%;
  border: 3px solid var(--primary);
  border-radius: 5px;
  padding: 10px;
}
.editWrapper {
  width: 100%;
  background: repeating-linear-gradient(
    45deg,
    rgba(255, 62, 62, 0.2),
    rgba(255, 62, 62, 0.2) 10px,
    var(--background) 10px,
    var(--background) 20px
  );
}
.editBlock {
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  align-items: center;
}
.editBlock > span {
  width: 100%;
}
.editInputs {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
.editInputs > * {
  width: 100%;
}
.editInputs .inputElement {
  background-color: var(--background);
}
.editInputs .labelElement,
 .editInputs .inputElement {
  width: 100%;
}
.editControls {
  text-align: end;
}
.selectionWrap {
  width: 100%;
  display: flex;
  flex-flow: column nowrap;
}
fieldset {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  width: 100%;
}
.conditionLabel {
  width: 100%;
  height: 100%;
  padding: 0;
  font-weight: bold;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-around;
  align-items: center;
}
.conditionButtons {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
}
.conditionButtons > div {
  display: flex;
  flex-flow: row nowrap;
}
.summaryWrapper {
  width: 100%;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-self: center;
}
.summaryText {
  display: flex;
  align-items: center;
  margin: 3px;
}
.modal {
  position: fixed;
  left: 0;
  top: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
  width: 100%;
  height: 100%;
  overflow: auto; 
  background-color: rgb(0,0,0);
  background-color: rgba(0,0,0,0.8);
}
.modalContent {
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  max-width: 500px;
  max-height: 300px;
  height: 100%;
  background-color: var(--background);
  padding: 20px;
  z-index: 1000;
}
.modalContent > svg {
  align-self: end;
  transition: transform 0.2s ease-in-out;
  min-height: 1.5em;
}
.modalContent > svg:hover {
  cursor: pointer;
  transform: rotate(25deg);
}
.modalChildContainer {
  width: 100%;
  height: 100%;
  padding: 0.5em;
  display: flex;
  flex-flow: column nowrap;
  justify-content: space-between;
  align-items: center;
}
.modalChildContainer > span {
  margin-bottom: 0.5em;
}

/* Target Hunting */
.arrayWrapper {
  width: 100%;
  max-height: 500px;
  overflow-y: scroll;
}
.arrayItem {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-evenly;
  align-items: center;
  border-bottom: 1px dashed var(--primary);
  margin: 0 15px;
}
.arrayItem span {
  margin-left: 5px;
}
.arrayItem p {
  width: 100%;
}
.arrayItem:hover {
  background-color: rgba(0, 0, 0, 0.2);
}

/* Live */
.wrapCollapsible input[type='checkbox'] {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.wrapCollapsible .collapsibleLabel {
  display: inline-block;
  width: auto;
  font-weight: bold;
  font-size: 1.8rem;
  cursor: pointer;
  border-bottom: 1px solid var(--secondary-gold);
  transition: all 0.5s ease-in-out;
}
.wrapCollapsible .collapsibleLabel:hover,
.wrapCollapsible .collapsibleLabel:focus {
  color: var(--primary);
}
.collapsibleContent {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-evenly;
  align-items: center;
  max-height: 0px;
  width: 100%;
  max-width: 800px;
  border-radius: 20px;
  color: var(--text-light);
  background-color: var(--secondary-gold);
  opacity: 0;
  overflow: hidden;
  transition: all 0.5s ease-in-out;
}
.toggle:checked + .collapsibleLabel {
  border-bottom: none;
}
.toggle:checked + .collapsibleLabel + .collapsibleContent {
  max-height: 100vh;
  opacity: 1;
  padding: 2rem;
}
.informationText {
  padding: 1rem 2rem;
}
.informationText p {
  padding: 10px;
}
.informationText a {
  position: relative;
}
.informationText a::after {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  width: 0%;
  content: '';
  color: transparent;
  height: 3px;
  transition: all 0.5s;
  background-color: var(--main-blue);
}
.informationText a:hover::after {
  width: 100%;
}
.informationText a .icon {
  fill: var(--main-blue);
}
.setCloudflare {
  border-bottom: 1px solid var(--primary);
}
.setCloudflare:hover {
  color: var(--primary);
}
.liveBox {
  width: 100%;
}
.statisticalAnalysisBox {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  align-items: center;
}
.analysisBox {
  width: 100%;
  min-width: 150px;
  max-width: 600px;
  min-height: 200px;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  align-items: center;
  border: 4px solid var(--primary);
  border-radius: 5px;
  margin: 15px 0;
  padding: 15px;
  background-color: var(--secondaryTransparency);
}
.analysisItem {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: center;
  width: 50%;
}
.analysisBox label {
  justify-content: center;
}
.analysisBox input {
  max-width: 200px;
}
.heatmapContainer {
  width: 100%;
}
.heatmap {
  width: 100%;
}
.lineChartContainer {
  width: 80vw;
  margin: 0 auto;
}
.lineChart {
  width: 100%;
}
.informationChart {
  font-size: 1.6rem;
}

/* NotificationForm */
.notificationSoundWrapper {
  margin: 2.5rem 0;
}
.notificationSoundBox {
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  align-items: center;
}
.notificationBox {
  width: 100%;
  min-width: 150px;
  max-width: 600px;
  min-height: 200px;
  display: flex;
  flex-flow: row wrap;
  justify-content: space-evenly;
  align-items: center;
  border: 4px solid var(--primary);
  border-radius: 5px;
  margin: 15px 0;
  padding: 15px;
  background-color: var(--secondaryTransparency);
}
.notificationBox > p {
  display: block;
  width: 100%;
}
.notificationItem {
  display: flex;
  flex-flow: column nowrap;
  justify-content: flex-start;
  align-items: center;
  width: 45%;
  margin: 0 1rem;
}
.togglerWrapper {
  display: block;
  width: 55px;
  height: 25px;
  cursor: pointer;
  position: relative;
}
.togglerWrapper input[type="checkbox"] {
  display: none;
}
.togglerWrapper input[type="checkbox"]:checked+.togglerSlider {
  background-color: #44cc66;
}
.togglerWrapper .togglerSlider {
  background-color: #ccc;
  position: absolute;
  border-radius: 100px;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
}
.togglerWrapper .togglerKnob {
  position: absolute;
  -webkit-transition: all 300ms ease;
  transition: all 300ms ease;
}
.togglerWrapper.notificationLabel input[type="checkbox"]:checked+.togglerSlider .togglerKnob {
  left: calc(100% - 19px - 3px);
  -webkit-transform: scale(1);
  transform: scale(1);
}
.togglerWrapper.notificationLabel .togglerSlider {
  background-color: #eb4f37;
}
.togglerWrapper.notificationLabel .togglerKnob {
  width: calc(25px - 6px);
  height: calc(25px - 6px);
  border-radius: 50%;
  left: 3px;
  top: 3px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  background-color: white;
  -webkit-transform: scale(0.5);
  transform: scale(0.5);
}

/* Feedback */
.feedbackWrapper {
  margin: 2.5rem 0;
  width: 100%;
}
.feedbackBox {
  width: 100%;
  min-height: 200px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-evenly;
  align-items: center;
  color: white;
  border: 4px solid var(--primary);
  border-radius: 5px;
  margin: 15px 0;
  padding: 15px;
  background-color: var(--bg-dark);
}
.feedbackText {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  font-size: 1.8rem;
}
.feedbackText a {
  position: relative;
  color: var(--main-gold);
  margin: 1rem 0;
}
.feedbackText a::after {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
  width: 0%;
  content: '';
  color: transparent;
  height: 3px;
  transition: all 0.5s;
  background-color: var(--main-gold);
}
.feedbackText a:hover::after {
  width: 100%;
}

/* Footer */
footer {
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
}

/* Media Queries */

/* tablet landscape */
@media screen and (max-width: 1800px) {
}
@media screen and (max-width: 1000px) {
  .vue-apexcharts {
    width: 100%;
  }
}

/* tablet portrait */
@media screen and (max-width: 800px) {
  #Chart {
    padding: 15px;
  }
  .inputWrap {
    flex-flow: column nowrap;
    width: 50%;
  }
  .summaryWrapper {
    flex-wrap: wrap;
    justify-content: space-evenly;
  }
  .conditionButtons {
    flex: 100%;
  }
  .tabButton {
    margin: 1px 1px -1px 1px;
    padding: 12px;
  }
  button {
    margin: 5px;
    padding: 10px 15px;
  }
  label {
    justify-content: left;
  }
  .passage {
    flex-flow: column nowrap;
    padding: 5px;
  }
  .passage span {
    width: 100%;
    padding: 0 10px;
  }
  .passage .imgWrapper {
    min-width: 300px;
  }
  .passage .fadeInSlideIn {
    animation: fadeIn 2s forwards, slideLeft 4s forwards;
  }
  .statisticalAnalysisBox {
    justify-content: space-around;
  }
  .analysisBox {
    justify-content: space-between;
  }
  .analysisItem {
    width: 100%;
  }
  .expandedInformationBox {
    height: 700px;
    flex-flow: column nowrap;
    justify-content: space-evenly;
    align-items: center;
  }
}

/* phone portrait */
@media screen and (max-width: 650px) {
  #Chart {
    padding: 0;
  }
  .tabButton {
    margin: 1px 1px -1px 1px;
    padding: 2px;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
  }
  .inputWrap {
    width: 100%;
  }
  .installerWrapper {
    align-self: flex-start;
    padding: 10px 10px;
  }
  .installerWrapper span {
    margin-right: 40px;
  }
  .notificationWrapper {
    flex-flow: column nowrap;
    width: fit-content;
    min-width: 100px;
    width: 90%;
    height: fit-content;
    min-height: 100px;
    left: 5px;
    bottom: 10px;
    right: 5px;
    justify-content: space-around;
  }
  .notificationWrapper > svg {
    margin-left: 0;
    margin-top: 10px;
  }
  .notificationWrapper button {
    display: none;
  }
  .modalContent {
    max-width: 350px;
    max-height: 350px;
  }
  button {
    margin: 3px;
  }
  .feedbackBox {
    flex-flow: column nowrap;
  }
}

/* Supports */

@supports not (backdrop-filter: blur(2px)) {
  #Plot.blur {
      filter: blur(2px);
  }
}